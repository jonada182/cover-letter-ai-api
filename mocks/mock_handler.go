// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jonada182/cover-letter-ai-api/internal/handler (interfaces: HandlerInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockHandlerInterface is a mock of HandlerInterface interface.
type MockHandlerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockHandlerInterfaceMockRecorder
}

// MockHandlerInterfaceMockRecorder is the mock recorder for MockHandlerInterface.
type MockHandlerInterfaceMockRecorder struct {
	mock *MockHandlerInterface
}

// NewMockHandlerInterface creates a new mock instance.
func NewMockHandlerInterface(ctrl *gomock.Controller) *MockHandlerInterface {
	mock := &MockHandlerInterface{ctrl: ctrl}
	mock.recorder = &MockHandlerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHandlerInterface) EXPECT() *MockHandlerInterfaceMockRecorder {
	return m.recorder
}

// HandleAuth mocks base method.
func (m *MockHandlerInterface) HandleAuth(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleAuth", arg0)
}

// HandleAuth indicates an expected call of HandleAuth.
func (mr *MockHandlerInterfaceMockRecorder) HandleAuth(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleAuth", reflect.TypeOf((*MockHandlerInterface)(nil).HandleAuth), arg0)
}

// HandleCoverLetter mocks base method.
func (m *MockHandlerInterface) HandleCoverLetter(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleCoverLetter", arg0)
}

// HandleCoverLetter indicates an expected call of HandleCoverLetter.
func (mr *MockHandlerInterfaceMockRecorder) HandleCoverLetter(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleCoverLetter", reflect.TypeOf((*MockHandlerInterface)(nil).HandleCoverLetter), arg0)
}

// HandleCreateCareerProfile mocks base method.
func (m *MockHandlerInterface) HandleCreateCareerProfile(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleCreateCareerProfile", arg0)
}

// HandleCreateCareerProfile indicates an expected call of HandleCreateCareerProfile.
func (mr *MockHandlerInterfaceMockRecorder) HandleCreateCareerProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleCreateCareerProfile", reflect.TypeOf((*MockHandlerInterface)(nil).HandleCreateCareerProfile), arg0)
}

// HandleCreateJobApplication mocks base method.
func (m *MockHandlerInterface) HandleCreateJobApplication(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleCreateJobApplication", arg0)
}

// HandleCreateJobApplication indicates an expected call of HandleCreateJobApplication.
func (mr *MockHandlerInterfaceMockRecorder) HandleCreateJobApplication(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleCreateJobApplication", reflect.TypeOf((*MockHandlerInterface)(nil).HandleCreateJobApplication), arg0)
}

// HandleDeleteJobApplication mocks base method.
func (m *MockHandlerInterface) HandleDeleteJobApplication(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleDeleteJobApplication", arg0)
}

// HandleDeleteJobApplication indicates an expected call of HandleDeleteJobApplication.
func (mr *MockHandlerInterfaceMockRecorder) HandleDeleteJobApplication(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleDeleteJobApplication", reflect.TypeOf((*MockHandlerInterface)(nil).HandleDeleteJobApplication), arg0)
}

// HandleGetCareerProfile mocks base method.
func (m *MockHandlerInterface) HandleGetCareerProfile(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleGetCareerProfile", arg0)
}

// HandleGetCareerProfile indicates an expected call of HandleGetCareerProfile.
func (mr *MockHandlerInterfaceMockRecorder) HandleGetCareerProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleGetCareerProfile", reflect.TypeOf((*MockHandlerInterface)(nil).HandleGetCareerProfile), arg0)
}

// HandleGetJobApplicationByID mocks base method.
func (m *MockHandlerInterface) HandleGetJobApplicationByID(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleGetJobApplicationByID", arg0)
}

// HandleGetJobApplicationByID indicates an expected call of HandleGetJobApplicationByID.
func (mr *MockHandlerInterfaceMockRecorder) HandleGetJobApplicationByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleGetJobApplicationByID", reflect.TypeOf((*MockHandlerInterface)(nil).HandleGetJobApplicationByID), arg0)
}

// HandleGetJobApplications mocks base method.
func (m *MockHandlerInterface) HandleGetJobApplications(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleGetJobApplications", arg0)
}

// HandleGetJobApplications indicates an expected call of HandleGetJobApplications.
func (mr *MockHandlerInterfaceMockRecorder) HandleGetJobApplications(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleGetJobApplications", reflect.TypeOf((*MockHandlerInterface)(nil).HandleGetJobApplications), arg0)
}

// HandleIndex mocks base method.
func (m *MockHandlerInterface) HandleIndex(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleIndex", arg0)
}

// HandleIndex indicates an expected call of HandleIndex.
func (mr *MockHandlerInterfaceMockRecorder) HandleIndex(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleIndex", reflect.TypeOf((*MockHandlerInterface)(nil).HandleIndex), arg0)
}

// HandleLinkedInCallback mocks base method.
func (m *MockHandlerInterface) HandleLinkedInCallback(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleLinkedInCallback", arg0)
}

// HandleLinkedInCallback indicates an expected call of HandleLinkedInCallback.
func (mr *MockHandlerInterfaceMockRecorder) HandleLinkedInCallback(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleLinkedInCallback", reflect.TypeOf((*MockHandlerInterface)(nil).HandleLinkedInCallback), arg0)
}
