// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jonada182/cover-letter-ai-api/internal/http (interfaces: Http)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "go.uber.org/mock/gomock"
)

// MockHttp is a mock of Http interface.
type MockHttp struct {
	ctrl     *gomock.Controller
	recorder *MockHttpMockRecorder
}

// MockHttpMockRecorder is the mock recorder for MockHttp.
type MockHttpMockRecorder struct {
	mock *MockHttp
}

// NewMockHttp creates a new mock instance.
func NewMockHttp(ctrl *gomock.Controller) *MockHttp {
	mock := &MockHttp{ctrl: ctrl}
	mock.recorder = &MockHttpMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHttp) EXPECT() *MockHttpMockRecorder {
	return m.recorder
}

// HandleCoverLetter mocks base method.
func (m *MockHttp) HandleCoverLetter(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleCoverLetter", arg0)
}

// HandleCoverLetter indicates an expected call of HandleCoverLetter.
func (mr *MockHttpMockRecorder) HandleCoverLetter(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleCoverLetter", reflect.TypeOf((*MockHttp)(nil).HandleCoverLetter), arg0)
}

// HandleCreateCareerProfile mocks base method.
func (m *MockHttp) HandleCreateCareerProfile(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleCreateCareerProfile", arg0)
}

// HandleCreateCareerProfile indicates an expected call of HandleCreateCareerProfile.
func (mr *MockHttpMockRecorder) HandleCreateCareerProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleCreateCareerProfile", reflect.TypeOf((*MockHttp)(nil).HandleCreateCareerProfile), arg0)
}

// HandleGetCareerProfile mocks base method.
func (m *MockHttp) HandleGetCareerProfile(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleGetCareerProfile", arg0)
}

// HandleGetCareerProfile indicates an expected call of HandleGetCareerProfile.
func (mr *MockHttpMockRecorder) HandleGetCareerProfile(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleGetCareerProfile", reflect.TypeOf((*MockHttp)(nil).HandleGetCareerProfile), arg0)
}

// HandleIndex mocks base method.
func (m *MockHttp) HandleIndex(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleIndex", arg0)
}

// HandleIndex indicates an expected call of HandleIndex.
func (mr *MockHttpMockRecorder) HandleIndex(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleIndex", reflect.TypeOf((*MockHttp)(nil).HandleIndex), arg0)
}
